version: '3.8'

services:
  # PostgreSQL Database
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: userdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  # Mojo Database Service (gRPC)
  mojo-db-service:
    build:
      context: ..
      dockerfile: docker/mojo.Dockerfile
    container_name: mojo-db-service
    environment:
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: userdb
    ports:
      - "50051:50051"
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - backend-network

  # Java User Service (REST API)
  java-user-service:
    build:
      context: ..
      dockerfile: docker/java.Dockerfile
    container_name: java-user-service
    environment:
      GRPC_SERVER_HOST: mojo-db-service
      GRPC_SERVER_PORT: 50051
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    depends_on:
      - mojo-db-service
    networks:
      - backend-network
      - frontend-network

  # Go API Gateway
  go-api-gateway:
    build:
      context: ..
      dockerfile: docker/go.Dockerfile
    container_name: go-api-gateway
    environment:
      USER_SERVICE_URL: http://java-user-service:8080
      PORT: 8000
    ports:
      - "8000:8000"
    depends_on:
      - java-user-service
    networks:
      - frontend-network

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge

volumes:
  postgres-data: